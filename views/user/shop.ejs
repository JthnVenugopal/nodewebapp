<%- include("../../views/partials/user/header") %>

<style>
    #paginationContainer button.active {
        background-color: #007bff;
        color: white;
    }
</style>

<body>
    <div class="page-header breadcrumb-wrap my-5">
        <div class="container">
            <nav aria-label="Breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="#" rel="nofollow">Home</a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">Shop</li>
                </ol>
            </nav>
        </div>
    </div>
  
    <div class="container mt-4">
        <div class="row">
            <!-- Filters Section -->
            <div class="col-lg-3 d-flex flex-column">
                <h5 class="my-2">Filter Products</h5>
                <form id="filterForm">
                    <!-- Search Bar -->
                    <div class="mb-3">
                        <input type="text" name="search" id="search" class="form-control form-control-sm" placeholder="Search Products" />
                    </div>
                    <!-- Category Dropdown -->
                    <div class="mb-3">
                        <select name="category" id="category" class="form-select">
                            <option value="">Select Category</option>
                            <% categories.forEach(category => { %>
                                <option value="<%= category._id %>"><%= category.name %></option>
                            <% }) %>
                        </select>
                    </div>
                    <!-- Brand Dropdown -->
                    <div class="mb-3">
                        <select name="brand" id="brand" class="form-select">
                            <option value="">Select Brand</option>
                            <% brands.forEach(brand => { %>
                                <option value="<%= brand._id %>"><%= brand.brandName %></option>
                            <% }) %>
                        </select>
                    </div>
                    <!-- Sort Dropdown -->
                    <div class="mb-3">
                        <select name="sort" id="sort" class="form-select">
                            <option value="">Sort</option>
                            <option value="popularity">Popularity</option>
                            <option value="priceAsc">Price: Low to High</option>
                            <option value="priceDesc">Price: High to Low</option>
                            <option value="averageRating">Average Ratings</option>
                            <option value="nameAsc">Name: A-Z</option>
                            <option value="nameDesc">Name: Z-A</option>
                        </select>
                    </div>
                    <!-- Price Filter Dropdown -->
                    <div class="mb-3">
                        <select name="price" id="price" class="form-select">
                            <option value="">Select Price Range</option>
                            <option value="below1000">Below 1000</option>
                            <option value="1000-2000">1000 - 2000</option>
                            <option value="2000-3000">2000 - 3000</option>
                            <option value="3000-4000">3000 - 4000</option>
                            <option value="4000-5000">4000 - 5000</option>
                            <option value="above5000">5000 and Above</option>
                        </select>
                    </div>
                    <button type="button" class="btn btn-primary my-5" id="sortButton">Apply Filters</button>
                    <button type="button" class="btn btn-secondary my-5" id="clearFiltersButton">Clear Filters</button>
                </form>
            </div>

            <!-- Products Section -->
            <div class="col-lg-9 my-5">
                <div class="row" id="productsContainer">
                    <% products.forEach(product => { %>
                        <div class="col-lg-4 col-md-6 mb-4 product-card" 
                             data-category="<%= product.category %>" 
                             data-brand="<%= product.brand %>" 
                             data-name="<%= product.productName.toLowerCase() %>"
                             data-popularity="<%= product.popularity %>"
                             data-price="<%= product.variant.salePrice %>"
                             data-rating="<%= product.averageRating %>">
                            <a href="/productDetails?id=<%= product._id %>">
                                <div class="card h-100 shadow-sm">
                                    <% if (product.variant.productImages && product.variant.productImages.length > 0) { %>
                                        <img style="height: 200px; width: 100 %; object-fit: cover;" src="/uploads/re-image/<%= product.variant.productImages[0] %>" class="card-img-top" alt ="<%= product.productName %>">
                                    <% } %>
                                    <div class="card-body">
                                        <h5 class="card-title"><%= product.productName %></h5>
                                        <p class="text-success font-weight-bold">â‚¹<%= product.variant.salePrice.toLocaleString('en-IN') %></p>
                                        <% if (product.variant.quantity > 0) { %>
                                            <p class="text-success">In Stock: <%= product.variant.quantity %></p>
                                        <% } else { %>
                                            <p class="text-danger">Out of Stock</p>
                                        <% } %>
                                    </div>
                                </div>
                            </a>
                        </div>
                    <% }) %>
                </div>
                <!-- Pagination Section -->
                <div id="paginationContainer" class="d-flex justify-content-center mt-4"></div>
            </div>
        </div>
    </div>

    <%- include("../../views/partials/user/footer") %>

    <!-- <script>
        document.addEventListener('DOMContentLoaded', function() {
            const filterForm = document.getElementById('filterForm');
            const searchInput = document.getElementById('search');
            const categorySelect = document.getElementById('category');
            const brandSelect = document.getElementById('brand');
            const sortSelect = document.getElementById('sort');
            const priceSelect = document.getElementById('price');
            const sortButton = document.getElementById('sortButton');
            const clearFiltersButton = document.getElementById('clearFiltersButton');
            const productsContainer = document.getElementById('productsContainer');
            const paginationContainer = document.getElementById('paginationContainer');
            let currentPage = 1;
            const productsPerPage = 9;

            // Event listeners for filters
            searchInput.addEventListener('input', applyFilters);
            categorySelect.addEventListener('change', applyFilters);
            brandSelect.addEventListener('change', applyFilters);
            priceSelect.addEventListener('change', applyFilters);
            sortButton.addEventListener('click', applyFilters);
            clearFiltersButton.addEventListener('click', clearFilters);

            function applyFilters() {
                const searchValue = searchInput.value.toLowerCase();
                const selectedCategory = categorySelect.value;
                const selectedBrand = brandSelect.value;
                const selectedPrice = priceSelect.value;

                const productCards = document.querySelectorAll('.product-card');
                productCards.forEach(card => {
                    const productName = card.getAttribute('data-name');
                    const productCategory = card.getAttribute('data-category');
                    const productBrand = card.getAttribute('data-brand');
                    const productPrice = parseFloat(card.getAttribute('data-price'));

                    let isVisible = true;

                    if (searchValue && !productName.includes(searchValue)) isVisible = false;
                    if (selectedCategory && productCategory !== selectedCategory) isVisible = false;
                    if (selectedBrand && productBrand !== selectedBrand) isVisible = false;
                    if (selectedPrice) {
                        const ranges = {
                            below1000: productPrice < 1000,
                            '1000-2000': productPrice >= 1000 && productPrice <= 2000,
                            above5000: productPrice > 5000,
                        };
                        if (!ranges[selectedPrice]) isVisible = false;
                    }

                    card.style.display = isVisible ? 'block' : 'none';
                });

                paginateProducts(Array.from(productCards).filter(card => card.style.display !== 'none'));
            }

            function clearFilters() {
                searchInput.value = '';
                categorySelect.value = '';
                brandSelect.value = '';
                sortSelect.value = '';
                priceSelect.value = '';
                applyFilters();
            }

            function paginateProducts(visibleProducts) {
                const totalPages = Math.ceil(visibleProducts.length / productsPerPage);
                paginationContainer.innerHTML = '';
                for (let i = 1; i <= totalPages; i++) {
                    const button = document.createElement('button');
                    button.textContent = i;
                    button.classList.add('btn', 'btn-light', 'mx-1');
                    if (i === currentPage) button.classList.add('active');
                    button.addEventListener('click', () => {
                        currentPage = i;
                        showPage(visibleProducts, i);
                    });
                    paginationContainer.appendChild(button);
                }
                showPage(visibleProducts, currentPage);
            }

            function showPage(visibleProducts, page) {
                const start = (page - 1) * productsPerPage;
                const end = start + productsPerPage;
                visibleProducts.forEach ((card, index) => {
                    card.style.display = index >= start && index < end ? 'block' : 'none';
                });
            }

            applyFilters();
        });
    </script> -->



    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const filterForm = document.getElementById('filterForm');
            const searchInput = document.getElementById('search');
            const categorySelect = document.getElementById('category');
            const brandSelect = document.getElementById('brand');
            const sortSelect = document.getElementById('sort');
            const priceSelect = document.getElementById('price');
            const sortButton = document.getElementById('sortButton');
            const clearFiltersButton = document.getElementById('clearFiltersButton');
            const productsContainer = document.getElementById('productsContainer');
            const paginationContainer = document.getElementById('paginationContainer');
            let currentPage = 1;
            const productsPerPage = 9;
    
            // Event listeners for filters
            searchInput.addEventListener('input', applyFilters);
            categorySelect.addEventListener('change', applyFilters);
            brandSelect.addEventListener('change', applyFilters);
            priceSelect.addEventListener('change', applyFilters);
            sortSelect.addEventListener('change', applyFilters);
            sortButton.addEventListener('click', applyFilters);
            clearFiltersButton.addEventListener('click', clearFilters);
    
            function applyFilters() {
                const searchValue = searchInput.value.toLowerCase();
                const selectedCategory = categorySelect.value;
                const selectedBrand = brandSelect.value;
                const selectedPrice = priceSelect.value;
                const selectedSort = sortSelect.value;
    
                const productCards = Array.from(document.querySelectorAll('.product-card'));
                const filteredProducts = productCards.filter(card => {
                    const productName = card.getAttribute('data-name');
                    const productCategory = card.getAttribute('data-category');
                    const productBrand = card.getAttribute('data-brand');
                    const productPrice = parseFloat(card.getAttribute('data-price'));
    
                    let isVisible = true;
    
                    if (searchValue && !productName.includes(searchValue)) isVisible = false;
                    if (selectedCategory && productCategory !== selectedCategory) isVisible = false;
                    if (selectedBrand && productBrand !== selectedBrand) isVisible = false;
                    if (selectedPrice) {
                        const ranges = {
                            below1000: productPrice < 1000,
                            '1000-2000': productPrice >= 1000 && productPrice <= 2000,
                            '2000-3000': productPrice >= 2000 && productPrice < 3000,
                            '3000-4000': productPrice >= 3000 && productPrice < 4000,
                            '4000-5000': productPrice >= 4000 && productPrice < 5000,
                            above5000: productPrice > 5000,
                        };
                        if (!ranges[selectedPrice]) isVisible = false;
                    }
    
                    return isVisible;
                });
    
                // Sort filtered products
                if (selectedSort) {
                    filteredProducts.sort((a, b) => {
                        const priceA = parseFloat(a.getAttribute('data-price'));
                        const priceB = parseFloat(b.getAttribute('data-price'));
                        const ratingA = parseFloat(a.getAttribute('data-rating'));
                        const ratingB = parseFloat(b.getAttribute('data-rating'));
                        const nameA = a.getAttribute('data-name');
                        const nameB = b.getAttribute('data-name');
    
                        switch (selectedSort) {
                            case 'popularity':
                                return parseInt(b.getAttribute('data-popularity')) - parseInt(a.getAttribute('data-popularity'));
                            case 'priceAsc':
                                return priceA - priceB;
                            case 'priceDesc':
                                return priceB - priceA;
                            case 'averageRating':
                                return ratingB - ratingA;
                            case 'nameAsc':
                                return nameA.localeCompare(nameB);
                            case 'nameDesc':
                                return nameB.localeCompare(nameA);
                            default:
                                return 0;
                        }
                    });
                }
    
                paginateProducts(filteredProducts);
            }
    
            function clearFilters() {
                searchInput.value = '';
                categorySelect.value = '';
                brandSelect.value = '';
                sortSelect.value = '';
                priceSelect.value = '';
                applyFilters();
            }
    
            function paginateProducts(visibleProducts) {
                const totalPages = Math.ceil(visibleProducts.length / productsPerPage);
                paginationContainer.innerHTML = '';
                for (let i = 1; i <= totalPages; i++) {
                    const button = document.createElement('button');
                    button.textContent = i;
                    button.classList.add('btn', 'btn-light', 'mx-1');
                    if (i === currentPage) button.classList.add('active');
                    button.addEventListener('click', () => {
                            currentPage = i;
                            showPage(visibleProducts, i);
                        });
                    paginationContainer.appendChild(button);
                }
                showPage(visibleProducts, currentPage);
            }
    
            function showPage(visibleProducts, page) {
                const start = (page - 1) * productsPerPage;
                const end = start + productsPerPage;
                visibleProducts.forEach((card, index) => {
                    card.style.display = index >= start && index < end ? 'block' : 'none';
                });
            }
    
            applyFilters();
        });
    </script>



</body>