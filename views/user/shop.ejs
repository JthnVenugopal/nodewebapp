<%- include("../../views/partials/user/header") %>

<style>

#paginationContainer button.active {
  background-color: #007bff;
  color: white;
}


</style>

<body>
  <div class="page-header breadcrumb-wrap my-5">
    <div class="container">
      <nav aria-label="Breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item">
            <a href="#" rel="nofollow">Home</a>
          </li>
          <li class="breadcrumb-item active" aria-current="page">Shop</li>
        </ol>
      </nav>
    </div>
  </div>
  
  <div class="container mt-4">
    <div class="row">
      <div class="col-lg-3 d-flex" style="flex-direction: column;">
        <h5 class="my-2">Filter Products</h5>

        <!-- Filters Section -->
        <form id="filterForm">
          <!-- Search Bar -->
          <div class="mb-3">
            <input type="text" name="search" id="search" class="form-control form-control-sm" placeholder="Search Products" />
          </div>

          <!-- Category Dropdown -->
          <div class="mb-3">
            <select name="category" id="category" class="form-select my-3">
              <option value="">Select Category</option>
              <% categories.forEach(category => { %>
                <option value="<%= category._id %>"><%= category.name %></option>
              <% }) %>
            </select>
          </div>

          <!-- Brand Dropdown -->
          <div class="mb-3">
            <select name="brand" id="brand" class="form-select">
              <option value="">Select Brand</option>
              <% brands.forEach(brand => { %>
                <option value="<%= brand._id %>"><%= brand.brandName %></option>
              <% }) %>
            </select>
          </div>

          <!-- Sort By Dropdown and Button -->
          <div class="mb-3">
            <div class="input-group">
              <select name="sort" id="sort" class="form-select my-3">
                <option value="">Sort</option>
                <option value="popularity">Popularity</option>
                <option value="priceAsc">Price: Low to High</option>
                <option value="priceDesc">Price: High to Low</option>
                <option value="averageRating">Average Ratings</option>
                <option value="featured">Featured</option>
                <option value="newArrivals">New Arrivals</option>
                <option value="nameAsc">Name: A-Z</option>
                <option value="nameDesc">Name: Z-A</option>
              </select>
              <button type="button" class="btn btn-secondary btn-sm ml-2" id="sortButton" style="height: 35px;font-size: 10px; margin-top: 100px; margin-left: -50px;" >Sort</button>

            </div>
          </div>
        </form>
      </div>

      <div class="col-lg-9">
        <div class="row" id="productsContainer">
          <% products.forEach(product => { %>
            <div class="col-lg-4 col-md-6 mb-4 product-card" 
                 data-category="<%= product.category %>" 
                 data-brand="<%= product.brand %>" 
                 data-name="<%= product.productName.toLowerCase() %>"
                 data-popularity="<%= product.popularity %>"
                 data-price="<%= product.variant.salePrice %>"
                 data-rating="<%= product.averageRating %>">
              <a href="/productDetails?id=<%= product._id %>">
                <div class="card h-100">
                  <% if (product.variant.productImages && product.variant.productImages.length > 0) { %>
                    <img style="height: 320px;" src="/uploads/re-image/<%= product.variant.productImages[0] %>" class="card-img-top" alt="<%= product.productName %>">
                  <% } %>
                  <div class="card-body">
                    <h5 class="card-title"><%= product.productName %></h5>
                    <p class="text-success font-weight-bold">â‚¹<%= product.variant.salePrice.toLocaleString('en-IN') %></p>
                    <% if (product.variant.quantity > 0) { %>
                      <p class="text-success">In Stock: <%= product.variant.quantity %></p>
                    <% } else { %>
                      <p class="text-danger">Out of Stock</p>
                    <% } %>
                  </div>
                </div>
              </a>
            </div>
          <% }) %>
        </div>
      </div>
    </div>
  </div>

  <div class="d-flex justify-content-center mt-4" id="paginationContainer"></div>


  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const filterForm = document.getElementById('filterForm');
      const searchInput = document.getElementById('search');
      const categorySelect = document.getElementById('category');
      const brandSelect = document.getElementById('brand');
      const sortSelect = document.getElementById('sort');
      const sortButton = document.getElementById('sortButton');
      const productsContainer = document.getElementById('productsContainer');

      // Event listeners for search and filter inputs
      searchInput.addEventListener('input', applyFilters);
      categorySelect.addEventListener('change', applyFilters);
      brandSelect.addEventListener('change', applyFilters);
      sortButton.addEventListener('click', applyFilters);

      function applyFilters() {
        const searchValue = searchInput.value.toLowerCase();
        const selectedCategory = categorySelect.value;
        const selectedBrand = brandSelect.value;
        const sortOption = sortSelect.value;

        const productCards = document.querySelectorAll('.product-card');

        productCards.forEach(card => {
          const productName = card.getAttribute('data-name');
          const productCategory = card.getAttribute('data-category');
          const productBrand = card.getAttribute('data-brand');

          let isVisible = true;

          // Filter by search
          if (searchValue && !productName.includes(searchValue)) {
            isVisible = false;
          }

          // Filter by category
          if (selectedCategory && productCategory !== selectedCategory) {
            isVisible = false;
          }

          // Filter by brand
          if (selectedBrand && productBrand !== selectedBrand) {
            isVisible = false;
          }

          if (isVisible) {
            card.style.display = 'block';
          } else {
            card.style.display = 'none';
          }
        });

        // Sort products
        sortProducts(sortOption, productCards);
      }

      function sortProducts(option, productCards) {
        const productsArray = Array.from(productCards).filter(card => card.style.display !== 'none');
        let sortedProducts;

        switch (option) {
          case 'popularity':
            sortedProducts = productsArray.sort((a, b) => parseFloat(b.getAttribute('data-popularity')) - parseFloat(a.getAttribute('data-popularity')));
            break;
          case 'priceAsc':
            sortedProducts = productsArray.sort((a, b) => parseFloat(a.getAttribute('data-price')) - parseFloat(b.getAttribute('data-price')));
            break;
          case 'priceDesc':
            sortedProducts = productsArray.sort((a, b) => parseFloat(b.getAttribute('data-price')) - parseFloat(a.getAttribute('data-price')));
            break;
          case 'averageRating':
            sortedProducts = productsArray.sort((a, b) => parseFloat(b.getAttribute('data-rating')) - parseFloat(a.getAttribute('data-rating')));
            break;
          case 'nameAsc':
            sortedProducts = productsArray.sort((a, b) => a.getAttribute('data-name').localeCompare(b.getAttribute('data-name')));
            break;
          case 'nameDesc':
            sortedProducts = productsArray.sort((a, b) => b.getAttribute('data-name').localeCompare(a.getAttribute('data-name')));
            break;
          default:
            sortedProducts = productsArray;
        }

        // Append sorted products back to the container
        productsContainer.innerHTML = '';
        sortedProducts.forEach(product => {
          productsContainer.appendChild(product);
        });
      }

      function paginateProducts(products) {
    const totalPages = Math.ceil(products.length / productsPerPage);
    const startIndex = (currentPage - 1) * productsPerPage;
    const endIndex = startIndex + productsPerPage;

    productsContainer.innerHTML = '';
    products.slice(startIndex, endIndex).forEach(product => productsContainer.appendChild(product));

    renderPagination(totalPages);
  }

  function renderPagination(totalPages) {
    paginationContainer.innerHTML = '';

    if (totalPages <= 1) return;

    for (let i = 1; i <= totalPages; i++) {
      const pageButton = document.createElement('button');
      pageButton.textContent = i;
      pageButton.classList.add('btn', 'btn-outline-primary', 'mx-1');
      if (i === currentPage) pageButton.classList.add('active');

      pageButton.addEventListener('click', () => {
        currentPage = i;
        applyFilters();
      });

      paginationContainer.appendChild(pageButton);
    }
  }

      // Initial application of filters and sort to display products on page load
      applyFilters();
    });
  </script>



</body>

<%- include("../../views/partials/user/footer") %>
