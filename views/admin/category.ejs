<%- include("../../views/partials/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <link rel="stylesheet" href="/admin-assets/css/category.css">
</head>
<body>
  <section class="content-main">

    <header class="card-header text-center  " style="width: 100vw; margin-top: -30px;">
      <form action="/admin/category/" method="get" class="d-inline" style="">

        <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 600px;height: 60px; margin-left: 1100px; ; ">

          <input style="margin-left: 10px; border: 2px solid black; " type="text" class="form-control border-0 rounded-pill mt-1" placeholder="Search categories" name="search" />
          <button class="btn" type="submit" >Search</button>
        </div>
      </form>
    </header>

    
  <div>
    <h2 class="d-flex justify-content-center my-5">Add Category</h2>
  </div>
    <div class="card create-cat-card">
      <div class="card-body"  >
        <div class="row">
          <div class="col-md-3" style="font-size: 15px;">
            <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
              <div class="mb-4" >
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" class="form-control" id="product_name"/>
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea  name="description" class="form-control" id="descriptionId" ></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit" style="font-size: 15px;">
                  Create category
                </button>
              </div>
            </form>
          </div>
          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th class="text-center"></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th >Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th class="text-start">Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category, index) => { %>
                    <tr>
                        <td></td>
                        <td class="text-start"><%= category.name %></td>
                        <td class="text-start"><%= category.description %></td> <!-- Changed here -->
                        <td>
                            <% if (category.categoryOffer) { %>
                                <%= category.categoryOffer %>
                            <% } else { %>
                                0%
                            <% } %>
                        </td>
                        <td class="text-start">
                            <% if (category.categoryOffer === 0) { %>
                                <button class="btn btn-info" style="width: 120px; font-size: 15px;">
                                    <a href="#" class="text-white" onclick="addOffer('<%= category._id %>')">Add Offer</a>
                                </button> 
                            <% } else { %>
                                <button class="btn btn-info mt-2" style="width: 120px; font-size: 15px;">
                                    <a href="#" class="text-white" onclick="removeOffer('<%= category._id %>')">Remove</a>
                                </button>
                            <% } %>
                        </td>
                        <td class="text-start">
                            <% if (category.isListed) { %>
                                <span class="badge rounded-pill alert-success" style="width: 60px; color: black;">Listed</span>
                            <% } else { %>
                                <span class="badge rounded-pill alert-danger" style="width: 60px; color: black;">Unlisted</span>
                            <% } %>
                        </td>
                        <td class="text-start">
                            <% if (category.isListed) { %>
                                <button class="btn btn-danger" style="width: 100px; font-size: 15px;">
                                    <a href="/admin/listCategory?id=<%= category._id %>" class=" text-white">Unlist</a>
                                </button>
                            <% } else { %>
                                <button class="btn btn-success mt-2" style="width: 100px; font-size: 15px;">
                                    <a href="/admin/unlistCategory?id=<%= category._id %>" class="text-white">List</a>
                                </button>
                            <% } %>
                        </td>
                        <td class="text-start">
                            <a href="/admin/editCategory?id=<%=category.id%>" class="btn btn-info text-white" style="font-size: 15px;">Edit</a>
                        </td>

                        <td class="text-start">
                          <button class="btn btn-danger" onclick="deleteCategory('<%= category._id %>' )">Delete Category</button>

                      </td>
                    </tr>
                    <% }); %>
                 
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="pagination-container mt-5" >
      <a href="#" style="margin-left: 50px;">&laquo; Previous</a>
      <span class="current-page"></span>
      <a href="#"></a>
      <a href="#" style="margin-left: 50px;">Next &raquo;</a>
    </div>

    <div class="pagination-container">
      <% if (currentPage > 1) { %>
      <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
      <% } %> <% for (let i = 1; i <= totalPages; i++) { %> <% if (i ===
      currentPage) { %>
      <span class="current-page"><%= i %></span>
      <% } else { %>
      <a href="?page=<%= i %>"><%= i %></a>
      <% } %> <% } %> <% if (currentPage < totalPages) { %>
      <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
      <% } %>
    </div>

  </section>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

  <script>
  function handleFormSubmit(event) {
    event.preventDefault();
    if (!validateForm()) {
      return;
    }
    
    const name = document.getElementsByName("name")[0].value;
    const description = document.getElementById("descriptionId").value;

    fetch('/admin/addCategory', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ name, description }) // Include form data
    })
    .then(response => {
      if (!response.ok) {
        return response.json().then(err => {
          throw new Error(err.error);
        });
      }
      return response.json();
    })
    .then(data => {
      location.reload();
    })
    .catch(error => {
      if (error.message === "Category already exist") {
        Swal.fire({
          icon: 'error',
          title: 'Category already exists',
          text: 'Please try again',
        });
      }
      else {
        Swal.fire({
          icon: 'error',
          title: 'Category already exists',
          text: 'An error occurred while adding category',
        });
      }
    });
  }

  function validateForm() {
    clearErrorMessages();
    const name = document.getElementsByName("name")[0].value.trim();
    const description = document.getElementById("descriptionId").value.trim();
    let isValid = true;

    if (name === "") {
      displayErrorMessage("name-error", "Please enter a name.");
      isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(name)) {
      displayErrorMessage("name-error", "Category name should contain only alphabetic characters.");
      isValid = false;
    }

    if (description === "") {
      displayErrorMessage("description-error", "Please enter a description.");
      isValid = false;
    }
    return isValid;
  }

  function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
  }

  function clearErrorMessages() {
    const errorElements = document.getElementsByClassName("error-message");
    Array.from(errorElements).forEach((element) => {
      element.innerText = "";
      element.style.display = "none";
    });
  }

  async function addOffer(categoryId) {
    const { value: amount } = await Swal.fire({
      title: 'Offer in Percentage',
      input: 'number',
      inputLabel: 'Percentage',
      inputPlaceholder: '%',
      inputAttributes: {
        min: 0, // Optional: Set minimum value
        max: 100 // Optional: Set maximum value
      },
      showCancelButton: true // Optional: Show cancel button
    });

    if (amount) {
      try {
        const response = await fetch("/admin/addCategoryOffer", {
          method: "POST",
          headers: {
            'Content-Type': "application/json",
          },
          body: JSON.stringify({
            percentage: amount,
            categoryId: categoryId,
          }),
        });

        const data = await response.json();
        if (response.ok && data.status === true) {
          Swal.fire(
            "Offer added",
            "Offer added successfully",
            "success"
          ).then(() => {
            location.reload();
          });
        } else {
          Swal.fire("Failed", data.message || "Adding offer failed", "error");
        }


      } catch (error) {
        Swal.fire(
           "Error",
          "An error occurred while adding the offer",
          "error"
        );
        console.error("Error removing offer", error)
      }
    }
  }

  async function removeOffer(categoryId) {
    try {
        const response = await fetch("/admin/removeCategoryOffer", {
            method: "POST",
            headers: {
                'Content-Type': "application/json",
            },
            body: JSON.stringify({ categoryId: categoryId }),
        });

        const data = await response.json(); // Parse the JSON response

        // Check if the response is successful
        if (response.ok && data.status === true) {
            Swal.fire(
                "Offer removed",
                "The offer has been removed",
                "success"
            ).then(() => {
                location.reload();
            });
        } else {
            Swal.fire(data.message || "Removing offer failed", "error");
        }
    } catch (error) {
        Swal.fire(
            "Error",
            "An error occurred while removing the offer",
            "error"
        );
        console.error("Error removing offer", error);
    }
}



async function deleteCategory(categoryId) {
    const response = await fetch(`/admin/deleteCategory/${categoryId}`, {
        method: 'DELETE', // Use DELETE method
        headers: {
            'Content-Type': 'application/json'
        }
    });

    if (response.ok) {
        // Handle successful deletion (e.g., reload the page or remove the category from the UI)
        window.location.reload(); // Reload the page to see the changes
    } else {
        const result = await response.json();
        alert(result.message || 'Failed to delete category');
    }
}



</script>
<%- include("../../views/partials/admin/footer") %>