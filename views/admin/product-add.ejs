<%- include("../../views/partials/admin/header") %>

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <style>
            .error-message {
            display: none; /* Initially hide error messages */
            color: red;
            }

        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }

        .thumbnail {
            margin-right: 10px;
        }
    </style>
</head>

<section class="content-main">
    <div class="row">
        <div class="col-9"></div>
        <div class="col-lg-6">
            <div class="card mb-4" style="margin-left: 30%; max-width: 1000px; min-width: 1300px;">
                <div class="card-body">
                    <!-- form starts -->
                    <form method="post" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm(event)">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" placeholder="Type here" name="productName" class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>

                        <div class="col-lg-4 mb-4">
                            <label class="form-label">Brand</label>
                            <select class="form-select border" name="brand">
                                <% for(let i=0;i<brand.length;i++){ %>
                                    <option value="<%=brand[i].brandName%>">
                                        <%=brand[i].brandName%>
                                    </option>
                                <% } %>
                            </select>
                            <div id="brand-error" class="error-message"></div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>

                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                            <% for(let i=0;i<cat.length;i++) {%>
                                                <option value="<%= cat[i].name %>">
                                                    <%= cat[i].name %>
                                                </option>
                                            <% } %>
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card mb-4">
                            <div class="card-body">
                                <h3 class="my-3">Variant</h3>
                                <div class="row gx-3 gy-3">
                                    <div class="col-md-6">

                                        <label class="form-label">Size Available</label>
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" id="size6" name="sizes" value="6">
                                            <label class="form-check-label" for="size6">6</label>
                                        </div>
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" id="size7" name="sizes" value="7">
                                            <label class="form-check-label" for="size7">7</label>
                                        </div>
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" id="size8" name="sizes" value="8">
                                            <label class="form-check-label" for="size8">8</label>
                                        </div>
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" id="size9" name="sizes" value="9">
                                            <label class="form-check-label" for="size9">9</label>
                                        </div>
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" id="size10" name="sizes" value="10">
                                            <label class="form-check-label" for="size10">10</label>
                                        </div>
                                        <div id="size-error" class="text-danger mt -1"></div>
                                    </div>

                                    <div class="col-md-6">
                                        <label for="color" class="form-label">Color</label>
                                        <input type="text" id="color" class="form-control" placeholder="Enter color" name="color">
                                        <div id="color-error" class="text-danger mt-1"></div>
                                    </div>

                                    <div class="col-md-6">
                                        <label for="quantity" class="form-label">Quantity</label>
                                        <input type="number" id="quantity" class="form-control" placeholder="Enter quantity" name="quantity">
                                        <div id="quantity-error" class="text-danger mt-1"></div>
                                    </div>

                                    <div class="col-md-6">
                                        <label for="regularPrice" class="form-label">Regular Price</label>
                                        <input type="number" id="regularPrice" class="form-control" placeholder="Enter regular price" name="regularPrice">
                                        <div id="regularPrice-error" class="text-danger mt-1"></div>
                                    </div>

                                    <div class="col-md-6">
                                        <label for="salePrice" class="form-label">Sale Price</label>
                                        <input type="number" id="salePrice" class="form-control" placeholder="Enter sale price" name="salePrice">
                                        <div id="salePrice-error" class="text-danger mt-1"></div>
                                    </div>

                                    <div class="col-md-6">
                                        <label for="variantCode" class="form-label">Variant Code</label>
                                        <input type="string" id="variantCode" class="form-control" placeholder="Enter variant code" name="variantCode">
                                        <div id="variantCode-error" class="text-danger mt-1"></div>
                                    </div>
                                </div>
                            </div>
                        </div>






                        <div class="card mb-2">
                            <div class="card-header">
                                <h4 class="" style="color: aliceblue;">Choose images</h4>
                            </div>
                            <div class="border row">
                                <div id="addedImagesContainer" class="thumbnails-container"></div>
                            </div>
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView1">
                                    <input class="form-control" type="file" name="images" id="input1" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)">
                                    <div id="images-error" class="error-message"></div>
                                </div>
                                <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                    <img src="" id="croppedImg1" alt="">
                                    <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                </div>
                            </div>
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView2">
                                    <input class="form-control" type="file" name="images" id="input2" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)">
                                </div>
                                <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                    <img src="" id="croppedImg2" alt="">
                                    <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                </div>
                            </div>

                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView3">
                                    <input class="form-control" type="file" name="images" id="input3" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)">
                                </div>
                                <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                    <img src="" id="croppedImg3" alt="">
                                    <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                </div>
                            </div>

                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView4">
                                    <input class="form-control" type="file" name="images" id="input4" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 4)">
                                </div>
                                <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                    <img src="" id="croppedImg4" alt="">
                                    <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                </div>
                            </div>


                        </div>

                        <div>
                            <button class="btn btn-md rounded font-sm hover-up" type="submit">Publish</button>
                        </div>
                    </form>
                    <!-- form ends -->
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function validateForm(event) {
        clearErrorMessages();
        let valid = true;

        const name = document.getElementById('product_name').value.trim();
        const description = document.getElementById('descriptionid').value.trim();
        const brand = document.getElementsByName('brand')[0].value;
        const price = document.getElementById('regularPrice').value;
        const saleprice = document.getElementById('salePrice').value;
        const color = document.getElementById('color').value.trim();
        const quantity = document.getElementById('quantity').value;
        const variantCode = document.getElementById('variantCode').value

        if (!name) {
            displayErrorMessage('productName-error', 'Please enter a product name.');
            valid = false;
        }

        if (!description) {
            displayErrorMessage('description-error', 'Please enter a product description.');
            valid = false;
        }

        if (!brand) {
            displayErrorMessage('brand-error', 'Please select a brand.');
            valid = false;
        }

        if (!quantity || quantity <= 0) {
            displayErrorMessage('quantity-error', 'Please enter a valid quantity.');
            valid = false;
        }

        if (!/^\d+(\.\d{1,2})?$/.test(price) || price <= 0) {
            displayErrorMessage('regularPrice-error', 'Please enter a valid regular price.');
            valid = false;
        }

        if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || saleprice < 0) {
            displayErrorMessage('salePrice-error', 'Please enter a valid sale price.');
            valid = false;
        }

        if (parseFloat(price) <= parseFloat(saleprice)) {
            displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
            valid = false;
        }

        if (!color) {
            displayErrorMessage('color-error', 'Please enter a color.');
            valid = false;
        }

        // Check if at least one image is uploaded
        let imagesUploaded = false;
        for (let i = 1; i <= 4; i++) {
            const images = document.getElementById('input' + i);
            if (images.files.length > 0) {
                imagesUploaded = true;
                break;
            }
        }
        if (!imagesUploaded) {
            displayErrorMessage("images-error", 'Please select at least one image.');
            valid = false;
        }

        // Size validation
        let sizes = document.getElementsByName('sizes');
        let sizeSelected = Array.from(sizes).some(size => size.checked);
        if (!sizeSelected) {
            displayErrorMessage('size-error', 'Please select at least one size.');
            valid = false;
        }

        if (!valid) {
            event.preventDefault();
        } else {
            Swal.fire({
                title: 'Success!',
                text: 'Product has been added successfully!',
                icon: 'success',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.forms[0].submit();
                }
            });
        }
    }

    function displayErrorMessage(elementId, message) {
        const errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }

    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName('error-message');
        Array.from(errorElements).forEach(element => {
            element.innerText = '';
            element.style.display = "none";
        });
    }

    function viewImage(event, index) {
        const input = event.target;
        const reader = new FileReader();
        reader.onload = function () {
            const dataURL = reader.result;
            const image = document.getElementById("imgView" + index);
            image.src = dataURL;
            const cropper = new Cropper(image, {
                aspectRatio: 1,
                viewMode: 1,
                guides: true,
                background: false,
                autoCropArea: 1,
                zoomable: true,
            });

            const saveButton = document.querySelector("#saveButton" + index);
            saveButton.addEventListener("click", async function () {
                const croppedCanvas = cropper.getCroppedCanvas();
                const croppedImage = document.getElementById("croppedImg" + index);
                croppedImage.src = croppedCanvas.toDataURL("image/jpeg", 1.0);

                const timestamp = new Date().getTime();
                const fileName = `cropped-img-${timestamp}-${index}.png`;

                await croppedCanvas.toBlob(blob => {
                    const input = document.getElementById("input" + index);
                    const imgFile = new File([blob], fileName, { type: 'image/png' });
                    const fileList = new DataTransfer();
                    fileList.items.add(imgFile);
                    input.files = fileList.files;
                });

                cropper.destroy();
            });
        };
        reader.readAsDataURL(input.files[0]);
    }

    for (let i = 1; i <= 4; i++) {
        document.getElementById("input" + i).addEventListener("change", viewImage);
    }
</script>