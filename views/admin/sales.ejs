<%- include("../../views/partials/admin/header") %>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f3f4f6;
        margin: 0;
        padding: 0;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .header {
        background-color: #4a90e2;
        color: white;
        padding: 10px 20px;
        border-radius: 8px;
        text-align: center;
    }

    .filter-section, .report-summary, .report-download, .sales-table {
        margin: 20px 0;
        padding: 15px;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .filter-section form {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        align-items: center;
    }

    .filter-section input, .filter-section select, .filter-section button {
        padding: 10px;
        font-size: 14px;
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 100%;
        max-width: 250px;
    }

    .filter-section button {
        background-color: #007bff;
        color: #fff;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .filter-section button:hover {
        background-color: #0056b3;
    }

    .report-summary ul {
        list-style: none;
        padding: 0;
        margin: 0;
        font-size: 16px;
    }

    .report-summary li {
        margin: 5px 0;
        display: flex;
        justify-content: space-between;
        font-weight: 500;
    }

    .report-download button {
        margin-right: 10px;
        padding: 10px 15px;
        font-size: 14px;
        border-radius: 5px;
        background-color: #28a745;
        color: #fff;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .report-download button:hover {
        background-color: #218838;
    }

    .sales-table table {
        width: 100%;
        border-collapse: collapse;
        text-align: left;
        font-size: 14px;
    }

    .sales-table th {
        background-color: #4a90e2;
        color: white;
        padding: 10px;
    }

    .sales-table td {
        border: 1px solid #ddd;
        padding: 10px;
    }

    .sales-table tbody tr:nth-child(odd) {
        background-color: #f8f9fa;
    }

    .section-header {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 10px;
        color: #333;
    }

    .error-message {
        color: red;
        font-size: 12px;
        margin-top: 5px;
        display: block;
    }
</style>

<main class="container"> 
    <div class="header">
        <h1>Sales Report</h1>
    </div>

    <section class="filter-section">
        <h4 class="section-header">Filter Sales Report</h4>
        <form action="/admin/filterSales" method="GET">
            <div class="form-group">
                <label for="startDate">Custom Date Range:</label>
                <input type="date" id="startDate" name="startDate" value="<%= startDate %>">
                <span id="startDateError" class="error-message"></span>
            </div>
            <div class="form-group">
                <label for="endDate">To:</label>
                <input type="date" id="endDate" name="endDate" value="<%= endDate %>">
                <span id="endDateError" class="error-message"></span>
            </div>
            <div class="form-group">
                <label for="presetRange">Preset Ranges:</label>
                <select id="presetRange" name="presetRange">
                    <option value="1-day">1 Day</option>
                    <option value="7-days">1 Week</option>
                    <option value="1-month">1 Month</option>
                </select>
            </div>
            <button type="submit">Apply Filter</button>
        </form>            
    </section>        

    <section class="report-summary">
        <h4 class="section-header">Overall Sales Summary</h4>
        <ul>
            <li>Total Sales Count: <span id="salesCount"><%= totalSalesCount %></span></li>
            <li>Overall Order Amount: <span id="orderAmount">₹<%= overallOrderAmount.toFixed(2) %></span></li>
            <li>Overall Discount: <span id="totalDiscount">₹<%= totalDiscount.toFixed(2) %></span></li>
            <li>Coupons Count: <span id="couponsDeduction"><%= couponsDeduction ? couponsDeduction.toFixed(0) : '0.00' %></span></li>
        </ul>
    </section>

    <section class="report-download">
        <h4 class="section-header">Download Report</h4>
        <button id="downloadPdf" aria-label="Download Sales Report as PDF">Download PDF</button>
        <button id="downloadExcel" aria-label="Download Sales Report as Excel">Download Excel</button>
    </section>
    
    <section class="sales-table">
        <h4 class="section-header">Sales Details</h4>
        <table>
            <caption>Detailed Sales Records</caption>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Order ID</th>
                    <th>Amount</th>
                    <th>Discount</th>
                    <th>Coupons Applied</th>
                </tr>
            </thead>

            <%//console.log("Recent Sales frontend"+JSON.stringify(recentSales)) %>

            <tbody id="salesTableBody">
                <% if (recentSales.length === 0) { %>
                    <tr><td colspan="5">No sales records found.</td></tr>
                <% } else { %>
                    <% recentSales.forEach(sale => { %>
                        <tr>
                            <td><%= new Date(sale.createdAt).toLocaleString() %></td>
                            <td><%= sale.orderId.slice(-6) %></td>
                            <td>₹<%= sale.finalAmount.toFixed(2) %></td>
                            <td>₹<%= sale.discount ? sale.discount.toFixed(2) : '0.00' %></td>
                            <td><%= sale.discount ? 'Yes' : 'No' %></td>
                        </tr>
                    <% }) %>
                <% } %>
            </tbody>
        </table>
    </section>
</main>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const today = new Date();
        const todayISOString = today.toISOString().split('T')[0];  // Current date in YYYY-MM-DD format

        let startDate = document.getElementById('startDate').value || "";
        let endDate = document.getElementById('endDate').value || "";

        if (!startDate && !endDate) {
            startDate = todayISOString;
            endDate = todayISOString;
            document.getElementById('startDate').value = startDate;
            document.getElementById('endDate').value = endDate;
        }

        const startDateField = document.getElementById('startDate');
        const endDateField = document.getElementById('endDate');
        const startDateError = document.getElementById('startDateError');
        const endDateError = document.getElementById('endDateError');

        startDateField.addEventListener('change', validateDate);
        endDateField.addEventListener('change', validateDate);

        function validateDate() {
            const startDateValue = new Date(startDateField.value);
            const endDateValue = new Date(endDateField.value);
            
            let startDateValid = true;
            let endDateValid = true;

            startDateError.textContent = '';
            endDateError.textContent = '';

            if (startDateValue > new Date()) {
                startDateValid = false;
                startDateError.textContent = 'Start date cannot be in the future.';
            }

            if (endDateValue > new Date()) {
                endDateValid = false;
                endDateError.textContent = 'End date cannot be in the future.';
            }

            if (endDateValue < startDateValue) {
                endDateValid = false;
                endDateError.textContent = 'End date cannot be earlier than start date.';
            }

            if (startDateValid && endDateValid) {
                document.querySelector('button[type="submit"]').disabled = false;
            } else {
                document.querySelector('button[type="submit"]').disabled = true;
            }
        }

        const presetRange = document.getElementById('presetRange');
        presetRange.addEventListener('change', () => {
            const selectedPreset = presetRange.value;
            let newStartDate = "";
            let newEndDate = todayISOString;

            switch (selectedPreset) {
                case '1-day':
                    newStartDate = todayISOString;
                    break;
                case '7-days':
                    newStartDate = new Date(today.setDate(today.getDate() - 7)).toISOString().split('T')[0];
                    break;
                case '1-month':
                    newStartDate = new Date(today.setMonth(today.getMonth() - 1)).toISOString().split('T')[0];
                    break;
                default:
                    newStartDate = "";
                    newEndDate = "";
            }

            startDateField.value = newStartDate;
            endDateField.value = newEndDate;

            startDateError.textContent = '';
            endDateError.textContent = '';

            validateDate();
        });
    });

    document.getElementById('downloadPdf').addEventListener('click', async function () {
        const startDate = document.getElementById('startDate').value || new Date().toISOString().split('T')[0]; 
        const endDate = document.getElementById('endDate').value || new Date().toISOString().split('T')[0];

        try {
            const response = await fetch(`/admin/downloadSalesPDF?startDate=${startDate}&endDate=${endDate}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const blob = await response.blob();

                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = 'sales-report.pdf';

                link.click();
            } else {
                alert('Failed to download the PDF: ' + response.statusText);
            }
        } catch (error) {
            alert('Error downloading the PDF: ' + error.message);
        }
    });

    document.getElementById('downloadExcel').addEventListener('click', async function () {
        const startDate = document.getElementById('startDate').value || new Date().toISOString().split('T')[0]; 
        const endDate = document.getElementById('endDate').value || new Date().toISOString().split('T')[0];

        try {
            const response = await fetch(`/admin/downloadSalesExcel?startDate=${startDate}&endDate=${endDate}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const blob = await response.blob();

                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = 'sales-report.xlsx';

                link.click();
            } else {
                alert('Failed to download the Excel: ' + response.statusText);
            }
        } catch (error) {
            alert('Error downloading the Excel: ' + error.message);
        }
    });
</script>

<%- include("../../views/partials/admin/footer") %>